# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

set $term alacritty
set $term-float alacritty
set $menu wofi -c ~/.config/wofi/config -I
set $launcher nwggrid
set $powermenu nwgbar
set $cheat gedit ~/.config/sway/cheatsheet
set $filemanager nautilus
set $term-working-dir alacritty --working-directory=$( swaymsg -t get_tree | jq '.. | (.nodes? // empty)[] | select(.focused == true).pid? // empty' | xargs pstree -p | grep "\<tmux\>\|\<fish\>\|\<bash\>\|\<zsh\>\|\<sh\>" | grep -o '[0-9]*' | xargs pwdx 2> /dev/null | cut -f2- -d' ' | sort | tail -n 1 | tr -d '\n')

# wob
set $WOBSOCKET $XDG_RUNTIME_DIR/wob.sock
exec mkfifo $WOBSOCK && tail -f $WOBSOCK | wob

### Idle configuration
# exec swayidle -w\
#    timeout 1070 'swaylock -f -C ~/.config/swaylock/config'\
#    timeout 770 'swaymsg "output * dpms off"' \
#    resume 'swaymsg "output * dpms on"' \
#    before-sleep 'swaylock -C ~/.config/swaylock/config'
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Key bindings

## reload
bindsym --to-code  $mod+f1                   reload

bindsym --to-code  $mod+slash                split vertical; exec $term
bindsym --to-code  $mod+Shift+slash          split vertical; exec $term-working-dir
bindsym --to-code  $mod+apostrophe	         split horizontal; exec $term
bindsym --to-code  $mod+Shift+apostrophe	   split horizontal; exec $term-working-dir

bindsym --to-code  $mod+Shift+Tab     workspace next
bindsym --to-code  $mod+backslash     workspace back_and_forth
bindsym --to-code  $mod+Tab           exec /bin/python3 ~/.config/wofi/windows.py

# Start a floating terminal
bindsym --to-code  $mod+Return        exec $term
bindsym --to-code  $mod+Shift+Return  exec $term-working-dir

# space
bindsym --to-code  $mod+space         exec --no-startup-id makoctl restore
bindsym --to-code  $mod+Shift+space   exec --no-startup-id makoctl dismiss -a

# a
# Move focus to the parent container
bindsym --to-code  $mod+a             focus parent

# b
# bindsym --to-code  $mod+b           splith

# d
bindsym --to-code  $mod+d             exec $menu
bindsym --to-code  $mod+Shift+d       exec $launcher

# e
bindsym --to-code  $mod+e             exec ~/.config/sway/scripts/translate.sh ru
bindsym --to-code  $mod+Shift+e       exec ~/.config/sway/scripts/translate.sh en
# bindsym --to-code  $mod+Shift+e     exec $powermenu
# bindsym --to-code  $mod+e           layout toggle split

# f
bindsym --to-code  $mod+f             fullscreen

# i
bindsym --to-code  $mod+i             floating toggle
bindsym --to-code  $mod+Shift+i       floating disable

# p
bindsym --to-code  $mod+p             exec ~/.config/wofi/windows.py

# q
bindsym --to-code  $mod+q             kill

# s
# bindsym --to-code  $mod+s layout stacking
bindsym --to-code  $mod+s             sticky toggle;
bindsym --to-code  $mod+Shift+s		   split toggle

# v
# bindsym --to-code  $mod+v splitv
bindsym --to-code  $mod+v             layout tabbed

# w
bindsym --to-code  $mod+w             exec ~/.config/sway/scripts/chrom.sh

# y
bindsym --to-code  $mod+y			      exec  ~/.config/sway/scripts/screenshot.sh
bindsym --to-code  $mod+Shift+y			exec  ~/.config/sway/scripts/screenshot.sh -g

floating_modifier $mod     normal

assign [class="idea"]            1
assign [class="Google-chrome"]   2
assign [class="Spotify"]         3
assign [class="Telegram"]        3
assign [class="Steam"]           4
assign [class="discord"]         4

# Moving around:
#
    # Move your focus around
    bindsym --to-code  $mod+$left focus left
    bindsym --to-code  $mod+$down focus down
    bindsym --to-code  $mod+$up focus up
    bindsym --to-code  $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym --to-code  $mod+Left focus left
    bindsym --to-code  $mod+Down focus down
    bindsym --to-code  $mod+Up focus up
    bindsym --to-code  $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym --to-code  $mod+Shift+$left move left
    bindsym --to-code  $mod+Shift+$down move down
    bindsym --to-code  $mod+Shift+$up move up
    bindsym --to-code  $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym --to-code  $mod+Shift+Left    resize shrink width 5 px or 5 ppt
    bindsym --to-code  $mod+Shift+Down    resize shrink height 5 px or 5 ppt
    bindsym --to-code  $mod+Shift+Up      resize grow height 5 px or 5 ppt
    bindsym --to-code  $mod+Shift+Right   resize grow width 5 px or 5 ppt

#
# Workspaces:
#
    # Switch to workspace
    bindsym --to-code  $mod+1 workspace number 1
    bindsym --to-code  $mod+2 workspace number 2
    bindsym --to-code  $mod+3 workspace number 3
    bindsym --to-code  $mod+4 workspace number 4
    bindsym --to-code  $mod+5 workspace number 5
    bindsym --to-code  $mod+6 workspace number 6
    bindsym --to-code  $mod+7 workspace number 7
    bindsym --to-code  $mod+8 workspace number 8
    bindsym --to-code  $mod+9 workspace number 9
    bindsym --to-code  $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym --to-code  $mod+Shift+1 move container to workspace number 1
    bindsym --to-code  $mod+Shift+2 move container to workspace number 2
    bindsym --to-code  $mod+Shift+3 move container to workspace number 3
    bindsym --to-code  $mod+Shift+4 move container to workspace number 4
    bindsym --to-code  $mod+Shift+5 move container to workspace number 5
    bindsym --to-code  $mod+Shift+6 move container to workspace number 6
    bindsym --to-code  $mod+Shift+7 move container to workspace number 7
    bindsym --to-code  $mod+Shift+8 move container to workspace number 8
    bindsym --to-code  $mod+Shift+9 move container to workspace number 9
    bindsym --to-code  $mod+Shift+0 move container to workspace number 10


# Scratchpad:
#

    # Move the currently focused window to the scratchpad
    bindsym --to-code  $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym --to-code  $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym --to-code  $left resize shrink width 10px
    bindsym --to-code  $down resize grow height 10px
    bindsym --to-code  $up resize shrink height 10px
    bindsym --to-code  $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym --to-code  Left resize shrink width 10px
    bindsym --to-code  Down resize grow height 10px
    bindsym --to-code  Up resize shrink height 10px
    bindsym --to-code  Right resize grow width 10px

    # Return to default mode
    bindsym --to-code  Return mode "default"
    bindsym --to-code  Escape mode "default"
}
bindsym --to-code  $mod+r mode "resize"

# Resize floating windows with mouse scroll:
bindsym --to-code  --whole-window --border $mod+button4 resize shrink height 5 px or 5 ppt
bindsym --to-code  --whole-window --border $mod+button5 resize grow height 5 px or 5 ppt
bindsym --to-code  --whole-window --border $mod+shift+button4 resize shrink width 5 px or 5 ppt
bindsym --to-code  --whole-window --border $mod+shift+button5 resize grow width 5 px or 5 ppt

#
#

# Volume
   # bindsym --to-code  XF86AudioRaiseVolume  exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10%
   # bindsym --to-code  XF86AudioLowerVolume  exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10%
   # bindsym --to-code  XF86AudioMute         exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle # mute sound

   #wob
   bindsym --to-code  XF86AudioRaiseVolume exec pamixer -ui 10 && pamixer --get-volume > $SWAYSOCK.wob
   bindsym --to-code  XF86AudioLowerVolume exec pamixer -ud 10  && pamixer --get-volume > $SWAYSOCK.wob
   bindsym --to-code  XF86AudioMute exec pamixer --toggle-mute && ( pamixer --get-mute && echo 0 > $SWAYSOCK.wob ) || pamixer --get-volume > $SWAYSOCK.wob

# Backlight
   #wob
   bindsym XF86MonBrightnessUp exec light -A 10 && light -G | cut -d'.' -f1 > $SWAYSOCK.wob
   bindsym XF86MonBrightnessDown exec light -U 10 && light -G | cut -d'.' -f1 > $SWAYSOCK.wob

   # bindsym --to-code  XF86MonBrightnessUp   exec --no-startup-id $HOME/.config/sway/scripts/bnotif.sh -r
   # bindsym --to-code  XF86MonBrightnessDown exec --no-startup-id $HOME/.config/sway/scripts/bnotif.sh -d

# Player
    bindsym XF86AudioPlay exec playerctl play
    bindsym XF86AudioPause exec playerctl pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous

# App shortcuts
    bindsym --to-code  $mod+n exec $filemanager

# Screenshots
    bindsym --to-code  print exec /usr/share/sway/scripts/grimshot --notify save output
    bindsym --to-code  Shift+print exec ~/.config/sway/scripts/screenshot.sh
